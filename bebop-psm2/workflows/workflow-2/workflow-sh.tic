
# Generated by stc version 0.8.2
# date                    : 2018/10/29 18:02:06
# Turbine version         : 1.2.3
# Input filename          : /blues/gpfs/home/tshu/project/bebop/MPI_in_MPI/bebop-psm2/workflows/workflow-1/workflow-sh.swift
# Output filename         : /blues/gpfs/home/tshu/project/bebop/MPI_in_MPI/bebop-psm2/workflows/workflow-1
# STC home                : /blues/gpfs/home/tshu/project/bebop/MPI_in_MPI/bebop-psm2/install/swift-t-install/stc
# Turbine home            : /home/tshu/project/bebop/MPI_in_MPI/bebop-psm2/install/swift-t-install/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : false
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : /blues/gpfs/home/tshu/project/bebop/MPI_in_MPI/bebop-psm2/workflows/workflow-1/workflow-sh.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : 
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : 
# stc.stc_home                  : /blues/gpfs/home/tshu/project/bebop/MPI_in_MPI/bebop-psm2/install/swift-t-install/stc
# stc.turbine.version           : 1.2.3
# stc.turbine_home              : /home/tshu/project/bebop/MPI_in_MPI/bebop-psm2/install/swift-t-install/turbine
# stc.version                   : 0.8.2

# Metadata:

package require turbine 1.2.3
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
    global c:s_0__2_1__3
    turbine::allocate_custom c:s_0__2_1__3 string 1 1 1 1
    turbine::store_string ${c:s_0__2_1__3} "0, 2; 1, 3"
}


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: int[int] u:procs RENAMED [int[int]:procs] /blues/gpfs/home/tshu/project/bebop/MPI_in_MPI/bebop-psm2/workflows/workflow-1/workflow-sh.swift:main():18:1
    # Var: string[int] u:cmds RENAMED [string[int]:cmds] /blues/gpfs/home/tshu/project/bebop/MPI_in_MPI/bebop-psm2/workflows/workflow-1/workflow-sh.swift:main():21:1
    # Var: *rw(string[int])[int] u:args RENAMED [*rw(string[int])[int]:args] /blues/gpfs/home/tshu/project/bebop/MPI_in_MPI/bebop-psm2/workflows/workflow-1/workflow-sh.swift:main():26:1
    # Var: string[int] t:5 RENAMED [string[int]:__t:5] /blues/gpfs/home/tshu/project/bebop/MPI_in_MPI/bebop-psm2/workflows/workflow-1/workflow-sh.swift:main():27:1
    # Var: *rw(string[int])[int] u:envs RENAMED [*rw(string[int])[int]:envs] /blues/gpfs/home/tshu/project/bebop/MPI_in_MPI/bebop-psm2/workflows/workflow-1/workflow-sh.swift:main():31:1
    # Var: string[int] t:11 RENAMED [string[int]:__t:11] /blues/gpfs/home/tshu/project/bebop/MPI_in_MPI/bebop-psm2/workflows/workflow-1/workflow-sh.swift:main():36:1
    # Var: string[int] t:18 RENAMED [string[int]:__t:18] /blues/gpfs/home/tshu/project/bebop/MPI_in_MPI/bebop-psm2/workflows/workflow-1/workflow-sh.swift:main():37:1
    # Var: int u:exit_code RENAMED [int:exit_code] /blues/gpfs/home/tshu/project/bebop/MPI_in_MPI/bebop-psm2/workflows/workflow-1/workflow-sh.swift:main():44:12
    # Var: $string v:turbine_output VALUE_OF [string:turbine_output]
    # Var: $string v:outdir VALUE_OF [string:outdir]
    # Var: $string v:t:12 VALUE_OF [string:__t:12]
    # Var: $string v:t:16 VALUE_OF [string:__t:16]
    # Var: $string v:t:14 VALUE_OF [string:__t:14]
    # Var: $string v:t:23 VALUE_OF [string:__t:23]
    # Var: $string v:t:21 VALUE_OF [string:__t:21]
    # Var: $void v:v RENAMED [$void:__v:v]
    # Var: int t:30 RENAMED [int:__t:30] /blues/gpfs/home/tshu/project/bebop/MPI_in_MPI/bebop-psm2/workflows/workflow-1/workflow-sh.swift:main():44:19
    lassign [ adlb::multicreate [ list container integer integer 2 1 2 ] [ list container integer string 1 1 3 ] [ list container integer ref 1 1 4 ] [ list container integer string 2 1 5 ] [ list container integer ref 1 1 6 ] [ list container integer string 1 1 7 ] [ list container integer string 1 1 8 ] [ list integer 1 1 9 ] [ list integer 1 1 10 ] ] u:procs u:cmds u:args t:5 u:envs t:11 t:18 u:exit_code t:30
    turbine::c::log "allocated u:procs=<${u:procs}> u:cmds=<${u:cmds}> u:args=<${u:args}> t:5=<${t:5}> u:envs=<${u:envs}>"
    turbine::c::log "allocated t:11=<${t:11}> t:18=<${t:18}> u:exit_code=<${u:exit_code}> t:30=<${t:30}>"
    turbine::array_kv_build ${u:envs} [ ::adlb::dict_create 0 ${t:11} 1 ${t:18} ] 1 integer ref
    turbine::array_kv_build ${t:5} [ ::adlb::dict_create 0 "" ] 1 integer string
    turbine::array_kv_build ${u:cmds} [ ::adlb::dict_create 0 "../../../../scripts/script1.sh" 1 "../../../../scripts/script2.sh" ] 1 integer string
    turbine::array_kv_build ${u:procs} [ ::adlb::dict_create 0 2 1 2 ] 1 integer integer
    turbine::array_kv_build ${u:args} [ ::adlb::dict_create 0 ${t:5} 1 ${t:5} ] 1 integer ref
    set v:turbine_output [ turbine::getenv_impl "TURBINE_OUTPUT" ]
    set v:outdir [ turbine::sprintf_impl "%s/run" ${v:turbine_output} ]
    set v:t:12 "swift_chdir=${v:outdir}"
    set v:t:16 "${v:outdir}/output_script1.txt"
    set v:t:14 "swift_output=${v:t:16}"
    turbine::array_kv_build ${t:11} [ ::adlb::dict_create 0 ${v:t:12} 1 ${v:t:14} ] 1 integer string
    set v:t:23 "${v:outdir}/output_script2.txt"
    set v:t:21 "swift_output=${v:t:23}"
    turbine::array_kv_build ${t:18} [ ::adlb::dict_create 0 ${v:t:12} 1 ${v:t:21} ] 1 integer string
    
	file mkdir ${v:outdir} 

    turbine::sum_integer [ list ${t:30} ] [ list ${u:procs} ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "__entry-call_foreign-printf"
    turbine::reset_priority
    turbine::rule [ list ${t:30} ] "main-ann-wait1 ${t:30} ${u:args} ${u:cmds} ${u:envs} ${u:exit_code} ${u:procs}"
}


proc __entry-call_foreign-printf {  } {
    # Var: $void v:t:25 VALUE_OF [void:__t:25]
    set v:t:25 [ turbine::printf_local "swift: multiple launching: %s, %s" "../../../../scripts/script1.sh" "../../../../scripts/script2.sh" ]
}


proc main-ann-wait1 { t:30 u:args u:cmds u:envs u:exit_code u:procs } {
    # Var: string c:s_0__2_1__3 OPT_TEMPORARY
    global c:s_0__2_1__3
    # Var: $int v:__t:30 RENAMED [$int:__v:__t:30] /blues/gpfs/home/tshu/project/bebop/MPI_in_MPI/bebop-psm2/workflows/workflow-1/workflow-sh.swift:main():44:31
    set v:__t:30 [ turbine::retrieve_integer ${t:30} CACHED 1 ]
    turbine::launch_multi_tcl [ list ${u:exit_code} ] [ list ${u:procs} ${u:cmds} ${u:args} ${u:envs} ${c:s_0__2_1__3} ] parallelism ${v:__t:30}
    turbine::rule [ list ${u:exit_code} ] "__entry-optmerged ${u:exit_code}"
}


proc __entry-optmerged { u:exit_code } {
    # Var: $int v:exit_code:1 VALUE_OF [int:exit_code]
    # Var: $boolean v:t:33 VALUE_OF [boolean:__t:33]
    # Var: $void v:t:31 VALUE_OF [void:__t:31]
    set v:exit_code:1 [ turbine::retrieve_integer ${u:exit_code} CACHED 1 ]
    set v:t:33 [ expr { ${v:exit_code:1} != 0 } ]
    if { ${v:t:33} } {
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "__entry-call_foreign-printf-1"
        turbine::reset_priority
    }
    set v:t:31 [ turbine::printf_local "swift: received exit code: %d" ${v:exit_code:1} ]
}


proc __entry-call_foreign-printf-1 {  } {
    # Var: $void v:t:35 VALUE_OF [void:__t:35]
    set v:t:35 [ turbine::printf_local "swift: The multi-launched applications did not succeed." ]
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
adlb::declare_struct_type 17 s:PartialStats [ list "n" integer "mean" float "M2" float ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
adlb::add_debug_symbol 1 "__c:s_0__2_1__3" ""
adlb::add_debug_symbol 2 "procs" "workflow-sh:main():18:1"
adlb::add_debug_symbol 3 "cmds" "workflow-sh:main():21:1"
adlb::add_debug_symbol 4 "args" "workflow-sh:main():26:1"
adlb::add_debug_symbol 5 "__t:5" "workflow-sh:main():27:1"
adlb::add_debug_symbol 6 "envs" "workflow-sh:main():31:1"
adlb::add_debug_symbol 7 "__t:11" "workflow-sh:main():36:1"
adlb::add_debug_symbol 8 "__t:18" "workflow-sh:main():37:1"
adlb::add_debug_symbol 9 "exit_code" "workflow-sh:main():44:12"
adlb::add_debug_symbol 10 "__t:30" "workflow-sh:main():44:19"
turbine::start swift:main swift:constants
turbine::finalize
